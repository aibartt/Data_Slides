---
title: "We Can Predict the Future"
author: "Robert Kubinec"
format: revealjs
---

```{r setup, echo=F}

library(tidyverse)
library(ggplot2)
library(brms)

knitr::opts_chunk$set(echo=TRUE)

# make our plots pretty

theme_set(theme_linedraw() +
            theme(panel.grid = element_blank(),
                  text=element_text(family="")))

hibbs <- 
  read_table2("hibbs.dat") %>%
  mutate(inc_party_candidate = str_remove_all(inc_party_candidate, '[\"]'),
         other_candidate     = str_remove_all(other_candidate, '[\"]'))

```

## What Is Linear Regression?

-   The Normal distribution has two parameters: the mean and the variance.

-   It shows us the uncertainty in these two parameters (if we think of a set of random events).

-   To use it as a *model*, we will put data into the mean.
    (We could also do this for the variance).

-   We will then think of the uncertainty we can generate as the *outcome* or the *response*.

-   How does the outcome vary as the data vary given our uncertainty?

## Dataset: The Relationship Between the Economy and Votes

```{r show_hibbs}

glimpse(hibbs)

```

## Look at the Data

```{r visualize_hibbs}

hibbs %>% 
  ggplot(aes(x = growth, y = vote, label = year)) +
  geom_hline(yintercept = 50, color = "grey75", size = 1/4) +
  geom_text(size = 3) +
  scale_x_continuous("Average recent growth in personal income", labels = function(x) str_c(x, "%")) +
  scale_y_continuous("Incumbent party's vote share", labels = function(x) str_c(x, "%")) +
  labs(subtitle = "Forecasting the election from the economy")
```

## Use the R Package brms to "Fit" a Regression

```{r fit_brms}

m7.1 <-
  brm(data = hibbs,
      vote ~ growth,
      file = "m07.01",
      refresh=0)

```

## Look at the Most Likely Values for Parameters

```{r check_results}

print(m7.1, robust = T)

```

## We Can Access the Simulations/Samples

```{r get_samples}

all_samples <- as_draws_df(m7.1)

head(all_samples,reserved=T)
```

## Calculate Most Likely Values

```{r calc_vals}

mean(all_samples$b_Intercept)
mean(all_samples$b_growth)

```

## What the Model Predicts for 2008

```{r predict2008}

mean(all_samples$b_Intercept) + mean(all_samples$b_growth) * 0.1

```

## Once Again with *Uncertainty*

```{r predictuncertain}

all_samples <- mutate(all_samples,
                      prediction=b_Intercept + b_growth * 0.1)

all_samples %>% 
  ggplot(aes(x=prediction)) +
  geom_histogram()

```

## Plot the Regression Line

```{r plotreg}

hibbs %>% 
  ggplot(aes(x = growth, y = vote, label = year)) +
  geom_hline(yintercept = 50, color = "grey75", size = 1/4) +
  geom_point() +
  geom_abline(intercept = fixef(m7.1, robust = T)[1, 1], slope = fixef(m7.1, robust = T)[2, 1],size = 1/3) +
  annotate(geom = "text",
           x = 3.5, y = 53.5,
           label = expression(y==46.2+3.1*x)) +
  scale_x_continuous("Average recent growth in personal income", labels = function(x) str_c(x, "%")) +
  scale_y_continuous("Incumbent party's vote share", labels = function(x) str_c(x, "%")) +
  labs(subtitle = "Data and linear fit")

```

## Now With Uncertainty

```{r plotregunc}

hibbs %>% 
  ggplot(aes(x = growth, y = vote, label = year)) +
    geom_abline(data=sample_n(all_samples,100),
              aes(intercept = b_Intercept, slope = b_growth),alpha=0.3) +
  geom_hline(yintercept = 50, color = "grey75", size = 1/4) +
  geom_point(colour="red") +
  scale_x_continuous("Average recent growth in personal income", labels = function(x) str_c(x, "%")) +
  scale_y_continuous("Incumbent party's vote share", labels = function(x) str_c(x, "%")) +
  labs(subtitle = "Data and linear fit")

```

## Prediction for 2016

```{r pred_future}

# Gaussian parameters
mu <- mean(all_samples$b_Intercept) + mean(all_samples$b_growth) * 2
sigma <- mean(all_samples$sigma)
# data points
tibble(x = seq(from = 37, to = 68, by = 0.01)) %>%
  mutate(d = dnorm(x, mean = mu, sd = sigma)) %>% 
  
  # plot!
  ggplot(aes(x = x, y = d, ymin = 0, ymax = d)) +
  geom_ribbon(data = . %>% filter(x >= 50),
              fill = "grey75") +
  geom_line() +
  annotate(geom = "text",
           x = 51, y = .025,
           label = "Predicted\n72% chance\nof Clinton victory",
           hjust = 0) +
  scale_x_continuous("Clinton share of the twoâˆ’party vote", 
                     breaks = 8:13 * 5, labels = function(x) str_c(x, "%")) +
  scale_y_continuous(NULL, breaks = NULL, expand = expansion(mult = c(0, 0.05))) +
  labs(subtitle = "Probability forecast of Hillary Clinton vote share in 2016,\nbased on 2% rate of economic growth")

```

## Check the Full "Posterior Prediction"

```{r post_pred}

pp_check(m7.1,ndraws = 100)

```
